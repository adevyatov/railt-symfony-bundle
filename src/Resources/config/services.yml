services:
    ##############################################################
    # Register DI Container
    # ============================================================
    #
    # For correct operation of autowiring for methods it is
    # required to register the DI Container as a Symfony service.
    #
    # As a proxy, it is transmitted compatible with the PSR in
    # order that the controller's methods have access to
    # the original Symfony services.
    #
    ##############################################################

    Railt\Container\Container:
        arguments: ['@service_container']

    Railt\Container\ContainerInterface:
        alias: Railt\Container\Container

    ##############################################################
    # Register the Railt Application Configurator
    # ============================================================
    #
    # TODO Add a description
    #
    ##############################################################

    Railt\Io\File:
        factory: Railt\Io\File::fromPathname
        arguments: ['%railt.schema%']

    Railt\Io\Readable:
        alias: Railt\Io\File

    Railt\Foundation\Application\Configurator:
        factory: ['Railt\Foundation\Application\Configurator', 'getInstance']
        calls:
            - method: setContainer
              arguments: ['@Railt\Container\ContainerInterface']
            - method: setDebugMode
              arguments: ['%railt.debug%']
            - method: addExtensions
              arguments: ['%railt.extensions%']
            - method: addAutoloadPaths
              arguments: ['%railt.autoload%']
            - method: setSchema
              arguments: ['@Railt\Io\Readable']

    Railt\SymfonyBundle\Controller\GraphQLController:
        arguments:
            - '@Railt\Container\ContainerInterface'
            - '@Railt\Foundation\Application\Configurator'

    Railt\SymfonyBundle\Storage\PSR6StorageBridge:
        arguments:
            - '@Psr\Cache\CacheItemPoolInterface'
